version: "3.8"

services:
    db:
        networks:
            - f1restapi_network
        image: postgres:latest
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "5432:5432"

    webapi:
        networks:
            - f1restapi_network
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
            - ConnectionStrings__DefaultConnection=${CONNECTIONSTRINGS__DEFAULTCONNECTION}
        ports:
            - "5000:80"
        depends_on:
            - db

    prometheus:
        networks:
            - f1restapi_network
        image: prom/prometheus:latest
        volumes:
            - prometheus_data:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=1d"
        ports:
            - "9090:9090"

    # grafana:
    #     image: grafana/grafana:latest
    #     environment:
    #         GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    #     volumes:
    #         - grafana_data:/var/lib/grafana
    #     ports:
    #         - "3000:3000"

volumes:
    pgdata:
    prometheus_data:
    grafana_data:
networks:
    f1restapi_network:
        driver: bridge
